{"version":3,"sources":["services/phonebookService.js","Contactlist.js","Searchfield.js","PersonForm.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","person","post","payload","id","delete","number","console","log","patch","Person","name","deleteHandler","onClick","Contactlist","contacts","filter","listUpdater","length","contact","toLowerCase","startsWith","map","window","confirm","phoneService","Searchfield","props","onChange","inputHandler","value","inputValue","PersonForm","onSubmit","formHandler","htmlFor","inputHandlers","nameHandler","inputValues","nameValue","phoneHandler","phoneValue","type","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","nameFilter","setNewFilter","useEffect","catch","err","alert","event","target","preventDefault","noRepeat","find","personObject","parseInt","createdPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72018add.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// const baseURL = \"http://localhost:3001/persons\";\r\n\r\nconst baseURL= \"/api/persons\"\r\n\r\nconst getPerson = (id) => {\r\n  const request = axios.get(`${baseURL}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  // const baseURL = \"http://localhost:4000/api/persons\";\r\n  const request = axios.get(baseURL);\r\n  return request.then(\r\n    (response) => response.data\r\n    // console.log(response);\r\n  );\r\n};\r\n\r\nconst createPerson = (person) => {\r\n  const request = axios.post(baseURL, person);\r\n  return request.then((response) => response.data.payload);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseURL}/${id}`);\r\n  // return request.then(response => response.data)\r\n  return request;\r\n};\r\n\r\nconst updateNumber = (id, number) => {\r\n  console.log(\"llega aqui?\");\r\n  console.log(id, number);\r\n  const request = axios.patch(`${baseURL}/${id}`, { number });\r\n  // return request.then(response => response.data)\r\n  return request;\r\n\r\n  //USAR PATCH para actualizar una o mas propiedades\r\n  //de un recurso, sin afectar a las demas\r\n\r\n  //USAR PUT, cuando se quiera reemplazar un recurso\r\n  //por otro\r\n};\r\n\r\nexport default { getPerson, getAll, createPerson, deletePerson, updateNumber };\r\n","import React from \"react\";\r\n// import { deletePerson } from \"./services/phonebookService\";\r\nimport phoneService from \"./services/phonebookService\";\r\n\r\nconst Contactlist = ({ contacts, filter, listUpdater }) => {\r\n  const deleteEntry = (person) => {\r\n    if (\r\n      window.confirm(\r\n        `Do you really want to delete ${person.name} from your phonebook?`\r\n      )\r\n    ) {\r\n      phoneService.deletePerson(person.id).then((response) => {\r\n        console.log(response);\r\n        listUpdater(contacts.filter((contact) => contact.id !== person.id));\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!contacts.length) return <div>No contacts have been added yet</div>;\r\n\r\n  if (!filter) {\r\n    return (\r\n      <div>\r\n        <h2>Numbers</h2>\r\n        <ul>\r\n          {contacts.map((contact) => (\r\n            <Person\r\n              key={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              deleteHandler={() => {\r\n                deleteEntry(contact);\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {/* {contacts.map((contact) => (\r\n            <li key={contact.id}>\r\n              {contact.name} - {contact.number}\r\n            </li>\r\n          ))} */}\r\n        </ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2>Numbers by name: {filter}</h2>\r\n        <ul>\r\n          {contacts\r\n            .filter((contact) =>\r\n              contact.name.toLowerCase().startsWith(filter.toLowerCase())\r\n            )\r\n            .map((contact) => (\r\n              <Person\r\n                key={contact.id}\r\n                name={contact.name}\r\n                number={contact.number}\r\n              />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Person = ({ name, number, deleteHandler }) => {\r\n  return (\r\n    <li>\r\n      {name} - {number} <button onClick={deleteHandler}>delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\n// export { Contactlist };\r\nexport default Contactlist;\r\n","import React from \"react\";\r\n\r\nconst Searchfield = (props) => {\r\n  return (\r\n    <div>\r\n      <label>Filter by name:</label>\r\n      <input onChange={props.inputHandler} value={props.inputValue}></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchfield;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.formHandler}>\r\n      <div>\r\n        <h2>Add new contact</h2>\r\n        <label htmlFor=\"name \">Name:</label>\r\n        <input name=\"name\" onChange={props.inputHandlers.nameHandler} value={props.inputValues.nameValue}></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"phone \">Phone:</label>\r\n        <input name=\"phone\" onChange={props.inputHandlers.phoneHandler} value={props.inputValues.phoneValue}></input>\r\n      </div>\r\n      <button type=\"submit\">Add new contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// formHandler={submitNewContact} inputHandlers={inputHandlers} inputValues={inputValues}\r\n\r\nexport default PersonForm;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./Contactlist\";\nimport Contactlist from \"./Contactlist\";\nimport Searchfield from \"./Searchfield\";\nimport PersonForm from \"./PersonForm\";\nimport axios from \"axios\";\nimport phoneService from \"./services/phonebookService\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [nameFilter, setNewFilter] = useState(\"\");\n\n  const handleNewName = (event) => setNewName(event.target.value);\n  const handleNewPhone = (event) => setNewPhone(event.target.value);\n  const handleNameFilter = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then((persons) => {\n        console.log(persons);\n        setPersons(persons);\n      })\n      .catch((err) => {\n        // console.log(\"getAll() not working correctly\");\n        console.log(err);\n        alert(\"getAll() not working correctly\");\n      });\n  }, []);\n\n  const submitNewContact = (event) => {\n    event.preventDefault();\n    if (newName && newPhone) {\n      const noRepeat = persons.find((person) => person.name === newName);\n\n      if (!noRepeat) {\n        const personObject = {\n          name: newName,\n          number: parseInt(newPhone),\n        };\n\n        phoneService.createPerson(personObject).then((createdPerson) => {\n          // console.log(createdPerson);\n          setPersons(persons.concat(createdPerson));\n          setNewName(\"\");\n          setNewPhone(\"\");\n        });\n      } else {\n        if (\n          window.confirm(\n            `${newName} is already registered in the phonebook, do you wish to replace the old number with this new one?`\n          )\n        ) {\n          console.log(noRepeat);\n          phoneService\n            .updateNumber(noRepeat.id, newPhone)\n            .then((response) => {\n              console.log(response);\n            });\n\n            //FALTA ACTUALIZAR EL ESTADO CON LOS NUEVOS DATOS\n          // setPersons(persons.map((person) => {}));\n        }\n\n        // setNewName(\"\");\n        // setNewPhone(\"\");\n      }\n    }\n  };\n\n  const updateList = (persons) => {\n    setPersons(persons);\n  };\n\n  const inputHandlers = {\n    phoneHandler: handleNewPhone,\n    nameHandler: handleNewName,\n  };\n  const inputValues = { phoneValue: newPhone, nameValue: newName };\n\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n      <Searchfield inputHandler={handleNameFilter} inputValue={nameFilter} />\n\n      <PersonForm\n        formHandler={submitNewContact}\n        inputHandlers={inputHandlers}\n        inputValues={inputValues}\n      />\n      <Contactlist\n        contacts={persons}\n        filter={nameFilter}\n        listUpdater={updateList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}